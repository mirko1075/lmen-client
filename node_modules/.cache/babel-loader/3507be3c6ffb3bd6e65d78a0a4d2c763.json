{"ast":null,"code":"import axios from \"axios\";\n\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: \"http://localhost:5000/api\"\n    });\n  }\n\n  getAllProducts() {\n    const pr = this.api.get(\"/products\").then(response => {\n      console.log(\"response.data :>> \", response.data);\n      response.data;\n    }).catch(err => {\n      console.log(err);\n    }); // .then(({ data }) => data); // Shorter way of `.then((response) => response.data);`\n\n    return pr;\n  }\n\n  getProduct(productId) {\n    const pr = this.api.post(\"/products/\" + productId).then(response => response.data);\n    return pr;\n  }\n\n}\n\nconst apiService = new ApiService();\nexport default apiService; // Service is a set of methods abstracted and placed into a class, out of which we create one instance.\n// In the above case, all axios request calls are abstracted into methods.","map":{"version":3,"sources":["/Users/mirkosiddi/Documents/Bootcamp-2020/Projects/lmen-confeccion/client/src/lib/api-service.js"],"names":["axios","ApiService","constructor","api","create","baseURL","getAllProducts","pr","get","then","response","console","log","data","catch","err","getProduct","productId","post","apiService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,CAAiB;AACfC,EAAAA,WAAW,GAAG;AACZ,SAAKC,GAAL,GAAWH,KAAK,CAACI,MAAN,CAAa;AACtBC,MAAAA,OAAO,EAAE;AADa,KAAb,CAAX;AAGD;;AAEDC,EAAAA,cAAc,GAAG;AACf,UAAMC,EAAE,GAAG,KAAKJ,GAAL,CACRK,GADQ,CACJ,WADI,EAERC,IAFQ,CAEFC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,QAAQ,CAACG,IAA3C;AACAH,MAAAA,QAAQ,CAACG,IAAT;AACD,KALQ,EAMRC,KANQ,CAMDC,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KARQ,CAAX,CADe,CAUf;;AAEA,WAAOR,EAAP;AACD;;AAEDS,EAAAA,UAAU,CAACC,SAAD,EAAY;AACpB,UAAMV,EAAE,GAAG,KAAKJ,GAAL,CACRe,IADQ,CACH,eAAeD,SADZ,EAERR,IAFQ,CAEFC,QAAD,IAAcA,QAAQ,CAACG,IAFpB,CAAX;AAIA,WAAON,EAAP;AACD;;AA5Bc;;AA+BjB,MAAMY,UAAU,GAAG,IAAIlB,UAAJ,EAAnB;AAEA,eAAekB,UAAf,C,CAEA;AACA","sourcesContent":["import axios from \"axios\";\n\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: \"http://localhost:5000/api\",\n    });\n  }\n\n  getAllProducts() {\n    const pr = this.api\n      .get(\"/products\")\n      .then((response) => {\n        console.log(\"response.data :>> \", response.data);\n        response.data;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // .then(({ data }) => data); // Shorter way of `.then((response) => response.data);`\n\n    return pr;\n  }\n\n  getProduct(productId) {\n    const pr = this.api\n      .post(\"/products/\" + productId)\n      .then((response) => response.data);\n\n    return pr;\n  }\n}\n\nconst apiService = new ApiService();\n\nexport default apiService;\n\n// Service is a set of methods abstracted and placed into a class, out of which we create one instance.\n// In the above case, all axios request calls are abstracted into methods.\n"]},"metadata":{},"sourceType":"module"}