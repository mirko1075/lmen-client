{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mirkosiddi/Documents/Bootcamp-2020/Projects/lmen-confeccion/client/src/context/auth-context.js\";\nimport React from 'react';\nimport authService from './../lib/auth-service';\nconst {\n  Consumer,\n  Provider\n} = /*#__PURE__*/React.createContext();\n\nclass AuthProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoggedIn: false,\n      isLoading: true,\n      user: null\n    };\n\n    this.signup = (username, password) => {\n      authService.signup(username, password).then(user => this.setState({\n        isLoggedIn: true,\n        user\n      })).catch(err => {\n        this.setState({\n          isLoggedIn: false,\n          user: null\n        });\n      });\n    };\n\n    this.login = (username, password) => {\n      authService.login(username, password).then(user => this.setState({\n        isLoggedIn: true,\n        user\n      })).catch(err => {\n        this.setState({\n          isLoggedIn: false,\n          user: null\n        });\n      });\n    };\n\n    this.logout = () => {\n      authService.logout().then(() => this.setState({\n        isLoggedIn: false,\n        user: null\n      })).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    authService.me().then(user => this.setState({\n      isLoggedIn: true,\n      user: user,\n      isLoading: false\n    })).catch(err => this.setState({\n      isLoggedIn: false,\n      user: null,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      isLoading,\n      user\n    } = this.state;\n    const {\n      signup,\n      login,\n      logout\n    } = this;\n    if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 27\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      value: {\n        isLoggedIn,\n        isLoading,\n        user,\n        signup,\n        login,\n        logout\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n} // HOC that converts regular component into a Consumer\n\n\nconst withAuth = WrappedComponent => {\n  return class extends React.Component {\n    render() {\n      return /*#__PURE__*/_jsxDEV(Consumer, {\n        children: value => {\n          const {\n            isLoggedIn,\n            isLoading,\n            user,\n            signup,\n            login,\n            logout\n          } = value;\n          return /*#__PURE__*/_jsxDEV(WrappedComponent, { ...this.props,\n            isLoggedIn: isLoggedIn,\n            isLoading: isLoading,\n            user: user,\n            signup: signup,\n            login: login,\n            logout: logout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this);\n    }\n\n  };\n};\n\nexport { AuthProvider, withAuth };","map":{"version":3,"sources":["/Users/mirkosiddi/Documents/Bootcamp-2020/Projects/lmen-confeccion/client/src/context/auth-context.js"],"names":["React","authService","Consumer","Provider","createContext","AuthProvider","Component","state","isLoggedIn","isLoading","user","signup","username","password","then","setState","catch","err","login","logout","console","log","componentDidMount","me","render","props","children","withAuth","WrappedComponent","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport authService from './../lib/auth-service';\n\nconst { Consumer, Provider } = React.createContext();\n\n\nclass AuthProvider extends React.Component {\n  state = {\n    isLoggedIn: false,\n    isLoading: true,\n    user: null\n  }\n\n  componentDidMount () {\n    authService.me()\n     .then((user) => this.setState({ isLoggedIn: true, user: user, isLoading: false }))\n     .catch((err) => this.setState({ isLoggedIn: false, user: null, isLoading: false }));\n  }\n\n  signup = (username, password) => {\n    authService.signup( username, password )\n      .then((user) => this.setState({ isLoggedIn: true, user }) )\n      .catch((err) => {\n        this.setState({ isLoggedIn: false, user: null });\n      })\n  }\n\n  login = (username, password) => {\n    authService.login( username, password )\n      .then((user) => this.setState({ isLoggedIn: true, user }))\n      .catch((err) => {\n        this.setState({ isLoggedIn: false, user: null });\n      })\n  }\n\n  logout = () => {\n    authService.logout()\n      .then(() => this.setState({ isLoggedIn: false, user: null }))\n      .catch((err) => console.log(err));\n  }\n\n\n  render() {\n    const { isLoggedIn, isLoading, user } = this.state;\n    const { signup, login, logout } = this;\n\n    if (isLoading) return <p>Loading</p>;\n\n    return(\n      <Provider value={{ isLoggedIn, isLoading, user, signup, login, logout }}  >\n        {this.props.children}\n      </Provider>\n    )\n  }\n\n}\n\n\n// HOC that converts regular component into a Consumer\nconst withAuth = (WrappedComponent) => {\n  \n  return class extends React.Component {\n    render() {\n      return(\n        <Consumer>\n          { (value) => {\n            const { isLoggedIn, isLoading, user, signup, login, logout } = value;\n\n            return (<WrappedComponent \n                      {...this.props}\n                      isLoggedIn={isLoggedIn} \n                      isLoading={isLoading} \n                      user={user} \n                      signup={signup} \n                      login={login} \n                      logout={logout}\n                    />)\n\n          } }\n        </Consumer>\n        )\n    }\n}\n}\n\n\nexport { AuthProvider, withAuth }"]},"metadata":{},"sourceType":"module"}