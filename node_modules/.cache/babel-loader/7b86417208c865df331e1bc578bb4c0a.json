{"ast":null,"code":"import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    this.auth = axios.create({\n      baseURL: \"http://localhost:5000\",\n      withCredentials: true\n    });\n  }\n\n  signup(username, password) {\n    const pr = this.auth.post(\"/auth/signup\", {\n      username,\n      password\n    }).then(response => response.data); // .then(({ data }) => data); // Shorter way of `.then((response) => response.data);`\n\n    return pr;\n  }\n\n  login(username, password) {\n    const pr = this.auth.post(\"/auth/login\", {\n      username,\n      password\n    }).then(response => response.data);\n    return pr;\n  }\n\n  logout() {\n    const pr = this.auth.get(\"/auth/logout\").then(response => response.data);\n    return pr;\n  }\n\n  me() {\n    const pr = this.auth.get(\"/auth/me\").then(response => response.data);\n    return pr;\n  }\n\n}\n\nconst authService = new AuthService();\nexport default authService; // Service is a set of methods abstracted and placed into a class, out of which we create one instance.\n// In the above case, all axios request calls are abstracted into methods.","map":{"version":3,"sources":["/Users/mirkosiddi/Documents/Bootcamp-2020/Projects/lmen-confeccion/client/src/lib/auth-service.js"],"names":["axios","AuthService","constructor","auth","create","baseURL","withCredentials","signup","username","password","pr","post","then","response","data","login","logout","get","me","authService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,WAAW,GAAG;AACZ,SAAKC,IAAL,GAAYH,KAAK,CAACI,MAAN,CAAa;AACvBC,MAAAA,OAAO,EAAE,uBADc;AAEvBC,MAAAA,eAAe,EAAE;AAFM,KAAb,CAAZ;AAID;;AAEDC,EAAAA,MAAM,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACzB,UAAMC,EAAE,GAAG,KAAKP,IAAL,CACRQ,IADQ,CACH,cADG,EACa;AAAEH,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KADb,EAERG,IAFQ,CAEFC,QAAD,IAAcA,QAAQ,CAACC,IAFpB,CAAX,CADyB,CAIzB;;AAEA,WAAOJ,EAAP;AACD;;AAEDK,EAAAA,KAAK,CAACP,QAAD,EAAWC,QAAX,EAAqB;AACxB,UAAMC,EAAE,GAAG,KAAKP,IAAL,CACRQ,IADQ,CACH,aADG,EACY;AAAEH,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KADZ,EAERG,IAFQ,CAEFC,QAAD,IAAcA,QAAQ,CAACC,IAFpB,CAAX;AAIA,WAAOJ,EAAP;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAMN,EAAE,GAAG,KAAKP,IAAL,CAAUc,GAAV,CAAc,cAAd,EAA8BL,IAA9B,CAAoCC,QAAD,IAAcA,QAAQ,CAACC,IAA1D,CAAX;AAEA,WAAOJ,EAAP;AACD;;AAEDQ,EAAAA,EAAE,GAAG;AACH,UAAMR,EAAE,GAAG,KAAKP,IAAL,CAAUc,GAAV,CAAc,UAAd,EAA0BL,IAA1B,CAAgCC,QAAD,IAAcA,QAAQ,CAACC,IAAtD,CAAX;AAEA,WAAOJ,EAAP;AACD;;AAnCe;;AAsClB,MAAMS,WAAW,GAAG,IAAIlB,WAAJ,EAApB;AAEA,eAAekB,WAAf,C,CAEA;AACA","sourcesContent":["import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    this.auth = axios.create({\n      baseURL: \"http://localhost:5000\",\n      withCredentials: true,\n    });\n  }\n\n  signup(username, password) {\n    const pr = this.auth\n      .post(\"/auth/signup\", { username, password })\n      .then((response) => response.data);\n    // .then(({ data }) => data); // Shorter way of `.then((response) => response.data);`\n\n    return pr;\n  }\n\n  login(username, password) {\n    const pr = this.auth\n      .post(\"/auth/login\", { username, password })\n      .then((response) => response.data);\n\n    return pr;\n  }\n\n  logout() {\n    const pr = this.auth.get(\"/auth/logout\").then((response) => response.data);\n\n    return pr;\n  }\n\n  me() {\n    const pr = this.auth.get(\"/auth/me\").then((response) => response.data);\n\n    return pr;\n  }\n}\n\nconst authService = new AuthService();\n\nexport default authService;\n\n// Service is a set of methods abstracted and placed into a class, out of which we create one instance.\n// In the above case, all axios request calls are abstracted into methods.\n"]},"metadata":{},"sourceType":"module"}