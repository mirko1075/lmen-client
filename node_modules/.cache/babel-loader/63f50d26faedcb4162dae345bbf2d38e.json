{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mirkosiddi/Documents/Bootcamp-2020/Projects/lmen-confeccion/client/src/context/auth-context.js\";\nimport React from \"react\";\nimport authService from \"./../lib/auth-service\";\nconst {\n  Consumer,\n  Provider\n} = /*#__PURE__*/React.createContext();\n\nclass AuthProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoggedIn: false,\n      isLoading: true,\n      email: null\n    };\n\n    this.signup = (email, password) => {\n      authService.signup(email, password).then(email => this.setState({\n        isLoggedIn: true,\n        email\n      })).catch(err => {\n        this.setState({\n          isLoggedIn: false,\n          email: null\n        });\n      });\n    };\n\n    this.login = (email, password) => {\n      authService.login(email, password).then(email => this.setState({\n        isLoggedIn: true,\n        email\n      })).catch(err => {\n        this.setState({\n          isLoggedIn: false,\n          email: null\n        });\n      });\n    };\n\n    this.logout = () => {\n      authService.logout().then(() => this.setState({\n        isLoggedIn: false,\n        email: null\n      })).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    authService.me().then(email => this.setState({\n      isLoggedIn: true,\n      email: email,\n      isLoading: false\n    })).catch(err => this.setState({\n      isLoggedIn: false,\n      email: null,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      isLoading,\n      email\n    } = this.state;\n    const {\n      signup,\n      login,\n      logout\n    } = this;\n    if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      value: {\n        isLoggedIn,\n        isLoading,\n        email,\n        signup,\n        login,\n        logout\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n} // HOC that converts regular component into a Consumer\n\n\nconst withAuth = WrappedComponent => {\n  return class extends React.Component {\n    render() {\n      return /*#__PURE__*/_jsxDEV(Consumer, {\n        children: value => {\n          const {\n            isLoggedIn,\n            isLoading,\n            email,\n            signup,\n            login,\n            logout\n          } = value;\n          return /*#__PURE__*/_jsxDEV(WrappedComponent, { ...this.props,\n            isLoggedIn: isLoggedIn,\n            isLoading: isLoading,\n            user: email,\n            signup: signup,\n            login: login,\n            logout: logout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    }\n\n  };\n};\n\nexport { AuthProvider, withAuth };","map":{"version":3,"sources":["/Users/mirkosiddi/Documents/Bootcamp-2020/Projects/lmen-confeccion/client/src/context/auth-context.js"],"names":["React","authService","Consumer","Provider","createContext","AuthProvider","Component","state","isLoggedIn","isLoading","email","signup","password","then","setState","catch","err","login","logout","console","log","componentDidMount","me","render","props","children","withAuth","WrappedComponent","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport authService from \"./../lib/auth-service\";\n\nconst { Consumer, Provider } = React.createContext();\n\nclass AuthProvider extends React.Component {\n  state = {\n    isLoggedIn: false,\n    isLoading: true,\n    email: null,\n  };\n\n  componentDidMount() {\n    authService\n      .me()\n      .then((email) =>\n        this.setState({ isLoggedIn: true, email: email, isLoading: false })\n      )\n      .catch((err) =>\n        this.setState({ isLoggedIn: false, email: null, isLoading: false })\n      );\n  }\n\n  signup = (email, password) => {\n    authService\n      .signup(email, password)\n      .then((email) => this.setState({ isLoggedIn: true, email }))\n      .catch((err) => {\n        this.setState({ isLoggedIn: false, email: null });\n      });\n  };\n\n  login = (email, password) => {\n    authService\n      .login(email, password)\n      .then((email) => this.setState({ isLoggedIn: true, email }))\n      .catch((err) => {\n        this.setState({ isLoggedIn: false, email: null });\n      });\n  };\n\n  logout = () => {\n    authService\n      .logout()\n      .then(() => this.setState({ isLoggedIn: false, email: null }))\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    const { isLoggedIn, isLoading, email } = this.state;\n    const { signup, login, logout } = this;\n\n    if (isLoading) return <p>Loading</p>;\n\n    return (\n      <Provider value={{ isLoggedIn, isLoading, email, signup, login, logout }}>\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\n// HOC that converts regular component into a Consumer\nconst withAuth = (WrappedComponent) => {\n  return class extends React.Component {\n    render() {\n      return (\n        <Consumer>\n          {(value) => {\n            const {\n              isLoggedIn,\n              isLoading,\n              email,\n              signup,\n              login,\n              logout,\n            } = value;\n\n            return (\n              <WrappedComponent\n                {...this.props}\n                isLoggedIn={isLoggedIn}\n                isLoading={isLoading}\n                user={email}\n                signup={signup}\n                login={login}\n                logout={logout}\n              />\n            );\n          }}\n        </Consumer>\n      );\n    }\n  };\n};\n\nexport { AuthProvider, withAuth };\n"]},"metadata":{},"sourceType":"module"}