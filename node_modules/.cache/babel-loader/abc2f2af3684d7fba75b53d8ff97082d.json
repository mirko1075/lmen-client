{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mirkosiddi/Documents/Bootcamp-2020/Projects/lmen-confeccion/client/src/components/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"./../context/auth-context\"; // Route that forbids access to a user who is not logged in\n\nfunction PrivateRoute(routeProps) {\n  // Value coming from `AuthProvider` ( via `withAuth` )\n  const {\n    isLoggedIn,\n    isLoading\n  } = routeProps; // Values coming from the PrivateRoute itself\n\n  const ComponentToShow = routeProps.component;\n  const {\n    exact,\n    path\n  } = routeProps; // If AuthProvider is still making request to check the user\n\n  if (isLoading) return \"Loading\";\n  return /*#__PURE__*/_jsxDEV(Route, {\n    exact: exact,\n    path: path,\n    render: function (props) {\n      if (!isLoggedIn) return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 33\n      }, this);else if (isLoggedIn) return /*#__PURE__*/_jsxDEV(ComponentToShow, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 37\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PrivateRoute;\nexport default _c2 = withAuth(PrivateRoute);\n/* \n// Concise way\nfunction PrivateRoute({ component: Component, isLoggedIn, ...rest }) {\n  return (\n   <Route\n    {...rest}\n    render={ (props)  => isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />}\n   /> \n)} \n*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mirkosiddi/Documents/Bootcamp-2020/Projects/lmen-confeccion/client/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","withAuth","PrivateRoute","routeProps","isLoggedIn","isLoading","ComponentToShow","component","exact","path","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,2BAAzB,C,CAEA;;AAEA,SAASC,YAAT,CAAsBC,UAAtB,EAAkC;AAChC;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4BF,UAAlC,CAFgC,CAIhC;;AACA,QAAMG,eAAe,GAAGH,UAAU,CAACI,SAAnC;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBN,UAAxB,CANgC,CAQhC;;AACA,MAAIE,SAAJ,EAAe,OAAO,SAAP;AAEf,sBACE,QAAC,KAAD;AACE,IAAA,KAAK,EAAEG,KADT;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,MAAM,EAAE,UAAUC,KAAV,EAAiB;AACvB,UAAI,CAACN,UAAL,EAAiB,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP,CAAjB,KACK,IAAIA,UAAJ,EAAgB,oBAAO,QAAC,eAAD,OAAqBM;AAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACtB;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KArBQR,Y;AAuBT,qBAAeD,QAAQ,CAACC,YAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"./../context/auth-context\";\n\n// Route that forbids access to a user who is not logged in\n\nfunction PrivateRoute(routeProps) {\n  // Value coming from `AuthProvider` ( via `withAuth` )\n  const { isLoggedIn, isLoading } = routeProps;\n\n  // Values coming from the PrivateRoute itself\n  const ComponentToShow = routeProps.component;\n  const { exact, path } = routeProps;\n\n  // If AuthProvider is still making request to check the user\n  if (isLoading) return \"Loading\";\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={function (props) {\n        if (!isLoggedIn) return <Redirect to=\"/login\" />;\n        else if (isLoggedIn) return <ComponentToShow {...props} />;\n      }}\n    />\n  );\n}\n\nexport default withAuth(PrivateRoute);\n\n/* \n// Concise way\nfunction PrivateRoute({ component: Component, isLoggedIn, ...rest }) {\n  return (\n   <Route\n    {...rest}\n    render={ (props)  => isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />}\n   /> \n)} \n*/\n"]},"metadata":{},"sourceType":"module"}